// From https://people.csail.mit.edu/jaffer/r5rs_9.html

number = @{ digit+ ~ ("." ~ digit*)? }

string_element = { "\\" | "\\\"" | !("\"" | "\\") ~ ANY }
string = @{ "\"" ~ string_element* ~ "\"" }

character_name = { "space" | "newline" }
character = @{ "#\\" ~ character_name | "#\\" ~ ANY }

boolean = @{ "#t" | "#f" }

// variable = { !syntactic_keyword ~ identifier }

// expression_keyword = {
// 	"quote" | "lambda" | "if" | "set!" | "begin" | "cond" | "and" | "or" |
// 	"case" | "let" | "let*" | "letrec" | "do" | "delay" | "quasiquote"
// }
// syntactic_keyword = { expression_keyword | "else" | "=>" | "define" | "unquote" | "unquote-splicing" }

peculiar_identifier = { "+" | "-" } // ?
special_subsequent = { "+" | "-" | "." | "@" }

digit = { ASCII_DIGIT }
subsequent = { initial | digit | special_subsequent }
special_initial = { "!" | "$" | "%" | "&" | "*" | "/" | ":" | "<" | "=" | ">" | "?" | "^" | "_" | "~" }

letter = { 'a'..'z' | 'A'..'Z' }
initial = { letter | special_initial }
identifier = @{ (initial ~ subsequent*) | peculiar_identifier }

COMMENT = @{ ";" ~ (!line_break ~ ANY)* ~ line_break }
WHITESPACE = _{ " " | "\t" | line_break }
line_break = { "\n" | "\r\n" }

delimiter = { WHITESPACE | "(" | ")" | "\"" | ";" }
token = {
	identifier | boolean | number | character | string |
	"(" | ")" | "#(" | "'" | "`" | "," | ",@" | "."
}

tokens = _{ token* }
file = _{ SOI ~ tokens ~ EOI }